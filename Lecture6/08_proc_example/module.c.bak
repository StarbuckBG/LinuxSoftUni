#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/proc_fs.h>


#define procfs_name "helloworld"

struct proc_dir_entry *Our_Proc_File;

int procfile_read(char *buffer, char ** buffer_location, off_t offset, int buffer_length, int *eof, void *data)
{
	int ret;
	printk(KERN_INFO "procfile_read (/proc/%s) called \n",procfs_name);
	if(offset > 0) //read finished
	{
		ret = 0;
	}
	else 
	{
	ret = sprintf(buffer, "Hello  world\n");
	}
	return ret;
}

int init_module()
{
	Our_Proc_File = proc_create(procfs_name, 0644, NULL);

	if(Our_Proc_File == NULL)
	{
		remove_proc_entry(procfs_name, &proc_root);
		printk(KERN_ALERT "Error: Could not initialize /proc/%s\n", procfs_name);
		return -ENOMEM;
	}
	
	Our_Proc_File->read_proc = procfile_read;
	Our_Proc_File->owner = THIS_MODULE;
	Our_Proc_File->mode = S_IFREG | S_IRUGO;
	Our_Proc_File->uid = 0;
	Our_Proc_File->giu = 0;
	Our_Proc_File->size = 37;
}

void cleanup_module()
{
	remove_proc_entry(procfs_name, &proc_root);
	printk
